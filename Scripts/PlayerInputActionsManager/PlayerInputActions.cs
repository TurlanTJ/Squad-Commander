//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/PlayerInputActionsManager/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""651f2ee8-121f-42aa-a296-451c70bd5836"",
            ""actions"": [
                {
                    ""name"": ""CameraMovement"",
                    ""type"": ""Value"",
                    ""id"": ""67945413-36ed-43dc-a458-9f07621a387d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FocusOnUnit1"",
                    ""type"": ""Button"",
                    ""id"": ""97937d81-e8da-4c1e-8699-3b41dc0e3184"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FocusOnUnit2"",
                    ""type"": ""Button"",
                    ""id"": ""8e7212db-5b9c-48d4-8299-a0db63fb91ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FocusOnUnit3"",
                    ""type"": ""Button"",
                    ""id"": ""4ee83596-3b9b-4281-b883-a2fe4002dac6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FocusOnUnit4"",
                    ""type"": ""Button"",
                    ""id"": ""4cef47e3-3ba1-4fe0-837e-70aab3389ac2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UnitUseAbility"",
                    ""type"": ""Button"",
                    ""id"": ""117f0f13-dc0b-4e6c-86d2-c30721853eaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UnitAttack"",
                    ""type"": ""Button"",
                    ""id"": ""7c18e6cb-ea33-4c6c-a652-dcb798d923a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UnitMove"",
                    ""type"": ""Button"",
                    ""id"": ""58210f48-6015-4a9f-8757-90b351edf906"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UnitStopEverything"",
                    ""type"": ""Button"",
                    ""id"": ""5ec69662-5da1-48e2-a443-00aca4542759"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3ff01b8d-5907-48f5-a10c-46c1b954ae7f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e31af596-bdf7-4077-bac0-bdb9514f6904"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d55d6f6b-183e-46a8-bf39-767c4a0a52b7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""47aba44b-0060-4a16-90bb-d4d835bf3d3f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1b9f95dc-8acb-4375-8e3b-32a69019be20"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1e26101d-9404-4de0-86dd-645543381a0b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusOnUnit1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55ae89e6-6a45-4fce-a7b0-63350cb41572"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusOnUnit2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f967c2bc-b6ca-48a0-b94a-8d751b5f1853"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusOnUnit3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a05d6d2-cfe5-4d7d-9042-99d1d37ae6e8"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusOnUnit4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea7bc9a7-4a79-4b19-9d2f-681bf63e0e39"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UnitUseAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a52a539-50ab-4874-b0ae-55411de0ea25"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UnitAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9074b313-1cb0-439d-bc7f-b5757a84c9f9"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UnitMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""961ea798-9ff7-4e69-af1b-f019c867f876"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UnitStopEverything"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_CameraMovement = m_Player.FindAction("CameraMovement", throwIfNotFound: true);
        m_Player_FocusOnUnit1 = m_Player.FindAction("FocusOnUnit1", throwIfNotFound: true);
        m_Player_FocusOnUnit2 = m_Player.FindAction("FocusOnUnit2", throwIfNotFound: true);
        m_Player_FocusOnUnit3 = m_Player.FindAction("FocusOnUnit3", throwIfNotFound: true);
        m_Player_FocusOnUnit4 = m_Player.FindAction("FocusOnUnit4", throwIfNotFound: true);
        m_Player_UnitUseAbility = m_Player.FindAction("UnitUseAbility", throwIfNotFound: true);
        m_Player_UnitAttack = m_Player.FindAction("UnitAttack", throwIfNotFound: true);
        m_Player_UnitMove = m_Player.FindAction("UnitMove", throwIfNotFound: true);
        m_Player_UnitStopEverything = m_Player.FindAction("UnitStopEverything", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_CameraMovement;
    private readonly InputAction m_Player_FocusOnUnit1;
    private readonly InputAction m_Player_FocusOnUnit2;
    private readonly InputAction m_Player_FocusOnUnit3;
    private readonly InputAction m_Player_FocusOnUnit4;
    private readonly InputAction m_Player_UnitUseAbility;
    private readonly InputAction m_Player_UnitAttack;
    private readonly InputAction m_Player_UnitMove;
    private readonly InputAction m_Player_UnitStopEverything;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraMovement => m_Wrapper.m_Player_CameraMovement;
        public InputAction @FocusOnUnit1 => m_Wrapper.m_Player_FocusOnUnit1;
        public InputAction @FocusOnUnit2 => m_Wrapper.m_Player_FocusOnUnit2;
        public InputAction @FocusOnUnit3 => m_Wrapper.m_Player_FocusOnUnit3;
        public InputAction @FocusOnUnit4 => m_Wrapper.m_Player_FocusOnUnit4;
        public InputAction @UnitUseAbility => m_Wrapper.m_Player_UnitUseAbility;
        public InputAction @UnitAttack => m_Wrapper.m_Player_UnitAttack;
        public InputAction @UnitMove => m_Wrapper.m_Player_UnitMove;
        public InputAction @UnitStopEverything => m_Wrapper.m_Player_UnitStopEverything;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @CameraMovement.started += instance.OnCameraMovement;
            @CameraMovement.performed += instance.OnCameraMovement;
            @CameraMovement.canceled += instance.OnCameraMovement;
            @FocusOnUnit1.started += instance.OnFocusOnUnit1;
            @FocusOnUnit1.performed += instance.OnFocusOnUnit1;
            @FocusOnUnit1.canceled += instance.OnFocusOnUnit1;
            @FocusOnUnit2.started += instance.OnFocusOnUnit2;
            @FocusOnUnit2.performed += instance.OnFocusOnUnit2;
            @FocusOnUnit2.canceled += instance.OnFocusOnUnit2;
            @FocusOnUnit3.started += instance.OnFocusOnUnit3;
            @FocusOnUnit3.performed += instance.OnFocusOnUnit3;
            @FocusOnUnit3.canceled += instance.OnFocusOnUnit3;
            @FocusOnUnit4.started += instance.OnFocusOnUnit4;
            @FocusOnUnit4.performed += instance.OnFocusOnUnit4;
            @FocusOnUnit4.canceled += instance.OnFocusOnUnit4;
            @UnitUseAbility.started += instance.OnUnitUseAbility;
            @UnitUseAbility.performed += instance.OnUnitUseAbility;
            @UnitUseAbility.canceled += instance.OnUnitUseAbility;
            @UnitAttack.started += instance.OnUnitAttack;
            @UnitAttack.performed += instance.OnUnitAttack;
            @UnitAttack.canceled += instance.OnUnitAttack;
            @UnitMove.started += instance.OnUnitMove;
            @UnitMove.performed += instance.OnUnitMove;
            @UnitMove.canceled += instance.OnUnitMove;
            @UnitStopEverything.started += instance.OnUnitStopEverything;
            @UnitStopEverything.performed += instance.OnUnitStopEverything;
            @UnitStopEverything.canceled += instance.OnUnitStopEverything;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @CameraMovement.started -= instance.OnCameraMovement;
            @CameraMovement.performed -= instance.OnCameraMovement;
            @CameraMovement.canceled -= instance.OnCameraMovement;
            @FocusOnUnit1.started -= instance.OnFocusOnUnit1;
            @FocusOnUnit1.performed -= instance.OnFocusOnUnit1;
            @FocusOnUnit1.canceled -= instance.OnFocusOnUnit1;
            @FocusOnUnit2.started -= instance.OnFocusOnUnit2;
            @FocusOnUnit2.performed -= instance.OnFocusOnUnit2;
            @FocusOnUnit2.canceled -= instance.OnFocusOnUnit2;
            @FocusOnUnit3.started -= instance.OnFocusOnUnit3;
            @FocusOnUnit3.performed -= instance.OnFocusOnUnit3;
            @FocusOnUnit3.canceled -= instance.OnFocusOnUnit3;
            @FocusOnUnit4.started -= instance.OnFocusOnUnit4;
            @FocusOnUnit4.performed -= instance.OnFocusOnUnit4;
            @FocusOnUnit4.canceled -= instance.OnFocusOnUnit4;
            @UnitUseAbility.started -= instance.OnUnitUseAbility;
            @UnitUseAbility.performed -= instance.OnUnitUseAbility;
            @UnitUseAbility.canceled -= instance.OnUnitUseAbility;
            @UnitAttack.started -= instance.OnUnitAttack;
            @UnitAttack.performed -= instance.OnUnitAttack;
            @UnitAttack.canceled -= instance.OnUnitAttack;
            @UnitMove.started -= instance.OnUnitMove;
            @UnitMove.performed -= instance.OnUnitMove;
            @UnitMove.canceled -= instance.OnUnitMove;
            @UnitStopEverything.started -= instance.OnUnitStopEverything;
            @UnitStopEverything.performed -= instance.OnUnitStopEverything;
            @UnitStopEverything.canceled -= instance.OnUnitStopEverything;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnCameraMovement(InputAction.CallbackContext context);
        void OnFocusOnUnit1(InputAction.CallbackContext context);
        void OnFocusOnUnit2(InputAction.CallbackContext context);
        void OnFocusOnUnit3(InputAction.CallbackContext context);
        void OnFocusOnUnit4(InputAction.CallbackContext context);
        void OnUnitUseAbility(InputAction.CallbackContext context);
        void OnUnitAttack(InputAction.CallbackContext context);
        void OnUnitMove(InputAction.CallbackContext context);
        void OnUnitStopEverything(InputAction.CallbackContext context);
    }
}
